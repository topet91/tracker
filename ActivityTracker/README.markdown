# Трекер активности (в разработке)

## Описание
Трекер активности — это приложение на Python, которое отслеживает время, проведенное в приложениях на вашем компьютере (например, Telegram), и предоставляет статистику за день, неделю или месяц. Оно также позволяет настраивать уведомления, чтобы предупреждать о превышении заданного времени использования для выбранных приложений.

### Основные функции
- Отслеживание активности приложений в реальном времени.
- Статистика использования за сегодня, последнюю неделю и последний месяц.
- Настраиваемые уведомления с лимитами времени для каждого приложения.
- Графический интерфейс на русском языке.
- Сохранение данных в локальной базе SQLite.
- Возможность запуска как отдельного приложения с ярлыка.

## Установка

### Требования
- Python 3.8 или выше
- Операционная система: Windows (для macOS/Linux требуется адаптация)

### Зависимости
Установите зависимости из `requirements.txt`:
```bash
pip install -r requirements.txt
```

Содержимое `requirements.txt`:
```
psutil==5.9.5
pygetwindow==0.0.9
plyer==2.1.0
```

### Запуск
1. Склонируйте или скачайте репозиторий.
2. Установите зависимости (см. выше).
3. Запустите приложение:
   ```bash
   python activity_tracker/main.py
   ```

### Создание исполняемого файла
Чтобы создать автономное приложение:
1. Установите PyInstaller:
   ```bash
   pip install pyinstaller
   ```
2. Создайте исполняемый файл:
   ```bash
   pyinstaller --onefile --windowed --name ActivityTracker activity_tracker/main.py
   ```
3. Найдите `ActivityTracker.exe` в папке `dist`.
4. Создайте ярлык на рабочем столе для удобного запуска.

## Использование
1. Запустите приложение через ярлык или команду `python activity_tracker/main.py`.
2. Приложение автоматически начнет отслеживать активные окна.
3. В интерфейсе:
   - Нажмите кнопки «Сегодня», «Последняя неделя» или «Последний месяц» для просмотра статистики.
   - В разделе «Настройки уведомлений»:
     - Просмотрите список приложений, использованных сегодня.
     - Установите галочку напротив приложения, чтобы включить уведомления.
     - Введите лимит времени в минутах.
     - Нажмите «Сохранить настройки».
   - Если лимит времени превышен, появится уведомление.
4. Нажмите «Выход» для завершения работы.

## Структура проекта
- `activity_tracker/`:
  - `__init__.py`: Инициализация пакета.
  - `database.py`: Операции с базой данных SQLite.
  - `tracker.py`: Отслеживание активности и уведомления.
  - `stats.py`: Получение статистики.
  - `notifications.py`: Управление уведомлениями.
  - `gui.py`: Графический интерфейс.
  - `main.py`: Точка входа приложения.
  - `activity_log.db`: База данных (создается при первом запуске).

- `README.md`: Документация.
- `requirements.txt`: Зависимости.

## Примечания
- Приложение оптимизировано для Windows. Для macOS/Linux требуется замена `pygetwindow` на платформо-специфичные библиотеки (например, `Quartz` или `Xlib`).
- Настройки уведомлений сохраняются в базе данных и сохраняются между сеансами.
- Уведомления срабатывают один раз за сеанс для каждого приложения. Для ежедневного сброса уведомлений требуется доработка.

## Разработка
Для доработки или расширения функционала:
- Измените `gui.py` для настройки интерфейса.
- Добавьте логику в `tracker.py` для дополнительных функций отслеживания.
- Обратитесь к автору для адаптации под macOS/Linux или других улучшений.

Автор: Анатолий Петров